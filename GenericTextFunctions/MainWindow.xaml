<Window x:Class="GenericTextFunctions.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:local='clr-namespace:GenericTextFunctions'
		xmlns:winforms='clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms'
		xmlns:avalon="http://avalondock.codeplex.com"
		Title="MainWindow"
		Loaded='Window_Loaded'
		WindowStartupLocation='CenterScreen'
		WindowState='Maximized'
		Icon="app.ico"
		UseLayoutRounding='True'
		PreviewMouseDoubleClick='Window_PreviewMouseDoubleClick'
		Activated='Window_Activated'
		Deactivated='Window_Deactivated'
		StateChanged='Window_StateChanged'>
	<!--xmlns:avalon="clr-namespace:AvalonDock;assembly=AvalonDock"-->
	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<!--<ResourceDictionary Source="/AvalonDock.Themes;component/themes/ExpressionDark.xaml" />-->
				<!--<ResourceDictionary Source="/AvalonDock;component/themes/aero.normalcolor.xaml" />-->
				<!--<ResourceDictionary Source="/AvalonDock;component/themes/classic.xaml" />-->
				<!--<ResourceDictionary Source="/AvalonDock;component/themes/luna.normalcolor.xaml" />-->
				<ResourceDictionary>
					<local:TrueVisibleFalseCollapsedConverter x:Key='trueVisibleFalseCollapsedConverter' />
					<local:AddToConverter x:Key='addToConverter' />
					<local:SubtractFromConverter x:Key='subtractFromConverter' />
					<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
									 Color="Transparent" />
					<SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
									 Color="Black" />
					<DataTemplate x:Key='operationTypeListboxItem'>
						<Border CornerRadius='5'
								BorderBrush='#888'
								BorderThickness='1'
								Padding='15,5'
								Margin='5,5,0,0'
								ToolTip='{Binding Tooltip}'>
							<Border.Background>
								<LinearGradientBrush StartPoint="0,0"
													 EndPoint="0,1">
									<GradientStop Color="#333"
												  Offset="0" />
									<GradientStop Color="#000"
												  Offset="0.7" />
									<GradientStop Color="#202020"
												  Offset="1" />
								</LinearGradientBrush>
							</Border.Background>
							<TextBlock Text='{Binding DisplayName}'
									   FontSize='14'
									   Foreground='#FFDEF3FF' />
						</Border>
					</DataTemplate>
					<HierarchicalDataTemplate x:Key='operationTypeTreeviewItem'
											  ItemsSource='{Binding Children}'>
						<Border CornerRadius='5'
								BorderBrush='#888'
								BorderThickness='1'
								Padding='15,5'
								Margin='5,5,0,0'>
							<Border.Background>
								<LinearGradientBrush StartPoint="0,0"
													 EndPoint="0,1">
									<GradientStop Color="#fff"
												  Offset="0" />
									<GradientStop Color="#eee"
												  Offset="0.7" />
									<GradientStop Color="#f0f0f0"
												  Offset="1" />
								</LinearGradientBrush>
							</Border.Background>
							<WrapPanel VerticalAlignment='Center'>
								<TextBlock Text='{Binding DisplayName}'
										   FontSize='14' />
								<ListBox Margin='10,0,0,0'
										 AllowDrop='True'
										 VerticalAlignment='Center'
										 VerticalContentAlignment='Center'
										 ItemsSource='{Binding InputControls}'
										 Visibility='{Binding HasInputControls, Converter={StaticResource trueVisibleFalseCollapsedConverter}}'
										 BorderThickness='0'
										 Background='Transparent'>
									<ListBox.ItemsPanel>
										<ItemsPanelTemplate>
											<WrapPanel />
										</ItemsPanelTemplate>
									</ListBox.ItemsPanel>
								</ListBox>
							</WrapPanel>
						</Border>
					</HierarchicalDataTemplate>
				</ResourceDictionary>
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</Window.Resources>
	<!--<Grid>-->
	<DockPanel Name='mainDockPanel' LastChildFill='True'>
		<!--<Grid.ColumnDefinitions>
			<ColumnDefinition />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height='auto' />
			<RowDefinition Height='auto' />
			<RowDefinition />
		</Grid.RowDefinitions>-->
		<Menu IsMainMenu="True"
			  DockPanel.Dock='Top'
			  VerticalAlignment='Top'
			  Height='auto'
			  Margin='0,0,0,10'>
			<MenuItem Header="_File">
				<MenuItem Header='Extract IS_BN data'
						  Name='MenuitemExtractISBNdata'
						  Click='MenuitemExtractISBNdata_Click' />
				<Separator />
				<MenuItem Header='_Open info file'
						  Click='MenuitemOpenInfoFile_Click' />
				<Separator />
				<MenuItem Header='_Import process file'
						  Click='MenuitemImportProcessFile_Click' />
				<MenuItem Header='E_xport process file'
						  Click='MenuitemExportProcessFile_Click' />
				<Separator />
				<MenuItem Header='E_xit'
						  Name='MenuitemExit'
						  Click='MenuitemExit_Click' />
			</MenuItem>
			<!--<MenuItem Header="_Edit" />-->
			<MenuItem Header="_View">
				<MenuItem Header='_Save layout'
						  Name='MenuitemSaveLayout'
						  Click='MenuitemSaveLayout_Click' />
				<MenuItem Header='_Load layout'
						  Name='MenuitemLoadLayout'
						  Click='MenuitemLoadLayout_Click' />
			</MenuItem>
			<!--<MenuItem Header="_Window" />-->
			<MenuItem Header="_Help">
				<MenuItem Header='_About'
						  Click='menuitemAbout_Click' />
			</MenuItem>
		</Menu>

		<Expander Name='expander1'
				  IsExpanded='True'
				  ExpandDirection='Down'
				  DockPanel.Dock='Top'>
			<ListBox Grid.Row='1'
					 Grid.ColumnSpan='10'
					 Name='listBox1'
					 Margin='10,0'
					 Height='auto'
					 Padding='0,0,0,5'
					 SelectionChanged='listBox1_SelectionChanged'
					 PreviewMouseLeftButtonDown='listBox1_PreviewMouseLeftButtonDown'
					 PreviewMouseRightButtonDown='listBox1_PreviewMouseRightButtonDown'
					 PreviewMouseLeftButtonUp='listBox1_PreviewMouseLeftButtonUp'
					 ItemTemplate='{StaticResource operationTypeListboxItem}'
					 AllowDrop="True"
					 Drop="listBox1_Drop">
				<ListBox.ItemsPanel>
					<ItemsPanelTemplate>
						<WrapPanel Width='{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=ListBox, AncestorLevel=1}, Converter={StaticResource subtractFromConverter}, ConverterParameter=10}' />
					</ItemsPanelTemplate>
				</ListBox.ItemsPanel>
			</ListBox>
		</Expander>

		<avalon:DockingManager x:Name='dockingManager1'>
			<avalon:DockingManager.Resources>
				<!--<ResourceDictionary Source="/AvalonDock.Themes;component/themes/ExpressionDark.xaml" />-->
				<!--<ResourceDictionary Source="/AvalonDock;component/themes/aero.normalcolor.xaml" />-->
				<!--<ResourceDictionary Source="/AvalonDock;component/themes/classic.xaml" />-->
				<!--<ResourceDictionary Source="/AvalonDock;component/themes/luna.normalcolor.xaml" />-->
			</avalon:DockingManager.Resources>
			<avalon:DockingManager.Theme>
				<avalon:AeroTheme />
				<!--<avalon:ExpressionDarkTheme />-->
				<!--<avalon:ExpressionLightTheme />-->
				<!--<avalon:VS2010Theme />-->
				<!--<avalon:MetroTheme />-->
			</avalon:DockingManager.Theme>
			<avalon:LayoutRoot>
				<avalon:LayoutPanel Orientation="Horizontal">
					<avalon:LayoutAnchorablePane DockWidth='600'>
						<avalon:LayoutAnchorable Title='Processing tree'
												 CanClose='False'
												 Closed='LayoutAnchorable_Closed'
												 CanHide='False'>
							<DockPanel Grid.Column='1'>
								<DockPanel DockPanel.Dock='Bottom'
										   Margin='0,0,3,10'>
									<Button Name='buttonImportFile'
											DockPanel.Dock='Left'
											Background='Transparent'
											Padding='5'
											UseLayoutRounding='True'
											Foreground='Green'
											FontWeight='Bold'
											FontSize='14'
											Click='buttonImportFile_Click'>Import File

									</Button>
									<Button Name='buttonExportFile'
											DockPanel.Dock='Right'
											HorizontalAlignment='Right'
											Background='Transparent'
											Padding='5'
											UseLayoutRounding='True'
											Foreground='Orange'
											FontWeight='Bold'
											FontSize='14'
											Click='buttonExportFile_Click'>Export File</Button>
								</DockPanel>
								<TreeView Name='treeView1'
										  SelectedItemChanged='treeView1_SelectedItemChanged'
										  ItemTemplate='{StaticResource operationTypeTreeviewItem}'
										  AllowDrop='True'
										  Drop='treeView1_Drop'
										  PreviewMouseDown='treeView1_PreviewMouseDown'
										  PreviewMouseMove='treeView1_PreviewMouseMove'>
									<TreeView.ItemContainerStyle>
										<Style TargetType="TreeViewItem">
											<Setter Property="IsExpanded"
													Value="{Binding IsExpanded}" />
										</Style>

									</TreeView.ItemContainerStyle>
								</TreeView>
							</DockPanel>
						</avalon:LayoutAnchorable>
					</avalon:LayoutAnchorablePane>
					<avalon:LayoutPanel Orientation='Vertical'>
						<avalon:LayoutAnchorablePane DockHeight='200'>
							<avalon:LayoutAnchorable Title='Input rich text'
													 CanClose='False'
													 CanHide='False'>
								<WindowsFormsHost Grid.Column='0'
												  Margin='0,0,5,0'>
									<winforms:RichTextBox x:Name='richTextBox1'
														  WordWrap='False' />
								</WindowsFormsHost>
							</avalon:LayoutAnchorable>
						</avalon:LayoutAnchorablePane>
						<avalon:LayoutDocumentPane>
							<avalon:LayoutAnchorable Title='Output grid'
													 CanClose='False'>
								<DockPanel Grid.Column='2'
										   LastChildFill='True'
										   Margin='10'>
									<Button Name='buttonProcessNow'
											DockPanel.Dock='Top'
											HorizontalAlignment='Left'
											Content='_Process now'
											Padding='10,3'
											Click='buttonProcessNow_Click' />
									<Border DockPanel.Dock='Bottom'
											BorderBrush='#333'
											BorderThickness='1'
											CornerRadius='3'
											Padding='3'
											Background='Transparent'>
										<StatusBar Background='Transparent'>
											<StatusBarItem Name='statusBarItem1'
														   Foreground='White' />
											<StatusBarItem Content='Test'
														   Visibility='Hidden' />
										</StatusBar>
									</Border>
									<WindowsFormsHost Grid.Column='2'
													  Margin='0,10'>
										<winforms:DataGridView x:Name='dataGrid1'
															   RowHeadersVisible='True'
															   RowHeadersWidthSizeMode='AutoSizeToAllHeaders'
															   AllowUserToAddRows='False'
															   AutoSizeColumnsMode='None' />
									</WindowsFormsHost>
								</DockPanel>
							</avalon:LayoutAnchorable>
						</avalon:LayoutDocumentPane>
					</avalon:LayoutPanel>
					
				</avalon:LayoutPanel>
			</avalon:LayoutRoot>
		</avalon:DockingManager>
		<!--<Grid Grid.Row='2'
			  Grid.ColumnSpan='10'
			  Margin='10'>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width='1*' />
				<ColumnDefinition Width='1*'/>
				<ColumnDefinition Width='1.5*'/>
			</Grid.ColumnDefinitions>
			<GridSplitter Width='5' Panel.ZIndex='100'/>
			
			<GridSplitter Grid.Column='1'
						  Width='3' />-->

		<!--<DataGrid Grid.Column='2'
					  Name='dataGrid1'
					  Margin='0,30,0,0' />-->
		<!--<RichTextBox Grid.Column='2'
						 Name='richTextBox2'
						 Margin='0,30,0,0'
						 IsReadOnly='True'
						 IsReadOnlyCaretVisible='True'/>-->
		<!--</Grid>-->
	</DockPanel>
	<!--</Grid>-->
</Window>
